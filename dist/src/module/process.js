/**
 ** –ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
 */
import fs from 'fs';
import { parentPort } from 'worker_threads';
import { getMessage } from './message.js';
import { getDevicesADB, killAppWhatsapp, killAppContact, getAllContacts, addContact, runWhatsapp, sendEventKey, } from './adb.js';
import { generateScripts } from './run_py.js';
import { checkContact } from './utils.js';
import { tapCoordinates } from './adb.js';
const devicesStr = await fs.readFileSync('./dist/devices.json').toString();
const devicesFile = JSON.parse(devicesStr);
const messagesStr = await fs.readFileSync('./dist/messages.json').toString();
const messages = JSON.parse(messagesStr);
const message = await getMessage(messages);
if (!message) {
    parentPort.postMessage('not message');
}
if (message) {
    const messageIndex = messages.findIndex((el) => el.id === message.id);
    console.log("üöÄ -> messageIndex:", messageIndex);
    const devices = await getDevicesADB(devicesFile).catch((err) => parentPort.postMessage(err));
    console.log('devices', devices);
    if (devices && !devices?.length) {
        console.warn('–ù–µ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤ ABD');
        parentPort.postMessage('not device');
    }
    if (devices && devices.length) {
        const freeDevices = devices.filter((el) => el.count <= 2 && el.status === 'free'); // –ü–æ–ª—É—á–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–Ω–µ–µ –¥–≤—É—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
        if (!freeDevices.length) {
            parentPort.postMessage('not free device');
        }
        const device = freeDevices[0];
        console.log("üöÄ -> device:", device);
        const indexDevice = devices.findIndex((el) => el.id === device.id); // –ò–Ω–¥–µ–∫—Å –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        devices[indexDevice].status = 'wait'; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        await fs.writeFileSync('./dist/devices.json', JSON.stringify(devices));
        await killAppWhatsapp(device).catch((err) => parentPort.postMessage(err));
        await killAppContact(device).catch((err) => parentPort.postMessage(err));
        const contacts = await getAllContacts(device).catch((err) => parentPort.postMessage(err));
        if ((contacts && !contacts.length) || contacts.findIndex((el) => +el.number === +message.phone) === -1) {
            await addContact(device, +message.phone);
        }
        await runWhatsapp(device).catch((err) => parentPort.postMessage(err));
        await generateScripts('isCreate', device);
        await sendEventKey(message.phone, device); // –ü–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ whatsapp
        const checkPhone = await generateScripts('isCheck', device); // –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –≤ whatsapp
        const check = checkContact(checkPhone);
        if (check) {
            await tapCoordinates(device, 580, 306); // –≤—ã–±–æ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞
            await sendEventKey(message.text, device); // –í–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
            await tapCoordinates(device, 838, 1509); // –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å"
            await killAppWhatsapp(device);
            messages[messageIndex].isWhatsapp = true;
            await fs.writeFileSync('./messages.json', JSON.stringify(messages));
        }
        messages[messageIndex].status = true;
        messages[messageIndex].isWhatsapp = false;
        devices[indexDevice].status = 'free'; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        await fs.writeFileSync('./dist/devices.json', JSON.stringify(devices));
        await fs.writeFileSync('./dist/messages.json', JSON.stringify(messages));
    }
}
